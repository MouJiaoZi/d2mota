/* Prettified by Source 2 Viewer 7.0.0.0 - https://valveresourceformat.github.io */

.PopupPanel.Match3
{
	flow-children: down;
	background-color: none;
	animation: none;
	border: 0px solid transparent;
	padding: 0px;
	box-shadow: none;
	width: fit-children;
	height: fit-children;
	margin-top: 40px;
}

.PopupPanel .MainContents
{
	width: fit-children;
	height: fit-children;
}

@define cellSize: 90px;
@define gridSize: 720px;
@define matchDisappearTime: 0.5s;
#ForegroundScene
{
	width: 100%;
	height: 100%;
	transition-property: saturation, brightness, opacity;
	transition-duration: 0.4s;
}

.GameplayFrozen #ForegroundScene
{
	saturation: 0.2;
	brightness: 0.2;
	opacity: 0.2;
}

.Body
{
	flow-children: right;
}

.Body .LeftColumn
{
	flow-children: down;
	padding: 16px 16px 24px;
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #323744f9 ), to( #171B23f9 ) );
	transition-property: opacity, transform;
	transition-duration: 0.5s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);
	opacity: 0;
	transform: scale3d( 1.2, 1.2, 1 );
}

.GameState_Active .Body .LeftColumn
{
	opacity: 1;
	transform: none;
}

.Body .LeftColumn .GameBoardContainer
{
	width: gridSize;
	height: gridSize;
}

.Body .LeftColumn .GameBoardContainer #GameBoard
{
	width: 100%;
	height: 100%;
	overflow: clip;
}

.Body .LeftColumn .GameBoardContainer #GameBoardScene
{
	width: 100%;
	height: 100%;
	transition-property: opacity, saturation, brightness;
	transition-duration: 0.4s;
}

.GameplayFrozen .Body .LeftColumn .GameBoardContainer #GameBoardScene
{
	saturation: 0.2;
	brightness: 0.2;
}

.IsPaused .Body .LeftColumn .GameBoardContainer #GameBoardScene
{
	opacity: 0.0;
}

.Body .LeftColumn .GameBoardContainer .GameBoardOverlay
{
	width: 100%;
	height: 100%;
}

.Body .LeftColumn .GameBoardContainer .GameBoardOverlay .GameOverlays
{
	width: 100%;
	flow-children: down;
	vertical-align: middle;
}

.Body .LeftColumn .GameBoardContainer .GameBoardOverlay .StatusOverlay
{
	horizontal-align: center;
	vertical-align: middle;
	flow-children: down;
	background-color: gradient( linear, 0% 0%, 100% 0%, from( #0000 ), color-stop( 0.2, #000e ), color-stop( 0.8, #000e ), to( #0000 ) );
	padding: 20px 40px;
	opacity: 0.0;
	transition-property: opacity;
	transition-duration: 0.2s;
}

.Body .LeftColumn .GameBoardContainer .GameBoardOverlay .StatusOverlay .Title
{
	color: white;
	font-size: 100px;
	letter-spacing: 4px;
	horizontal-align: center;
	text-align: center;
	text-shadow: 2px 2px 4px black;
	text-transform: uppercase;
	font-style: italic;
	font-weight: black;
	text-overflow: shrink;
}

.Body .LeftColumn .GameBoardContainer .GameBoardOverlay .StatusOverlay .Desc
{
	horizontal-align: center;
	text-align: center;
	color: #ccc;
	text-shadow: 2px 2px 4px black;
	margin-top: -4px;
	margin-bottom: 12px;
}

.PlayerIsStunned .Body .LeftColumn .GameBoardContainer .GameBoardOverlay .StatusOverlay.StunnedOverlay
{
	opacity: 1.0;
}

.OutOfMoves .Body .LeftColumn .GameBoardContainer .GameBoardOverlay .StatusOverlay.OutOfMovesOverlay
{
	opacity: 1.0;
}

.Body .RightColumn
{
	width: 752px;
	height: 100%;
}

.Score
{
	horizontal-align: center;
	vertical-align: bottom;
	margin-bottom: -8px;
	transition-property: opacity, transform;
	transition-duration: 0.2s;
	transition-delay: 0.5s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);
	opacity: 0;
	transform: translateY( 24px );
	visibility: collapse;
}

.GameState_Active .Score
{
	visibility: visible;
	opacity: 1;
	transform: none;
}

.Score .ScoreBackground,.Score .ScoreBorder
{
	width: 270px;
}

.Score .ScoreBackground
{
	wash-color: #4b381b;
}

.Score .ScoreBorder
{
	wash-color: #8b6c38;
}

.Score .ScoreData
{
	horizontal-align: center;
	vertical-align: center;
	flow-children: down;
	margin-top: 4px;
}

.Score .ScoreData Label
{
	horizontal-align: center;
	text-align: center;
	color: white;
}

.Score .ScoreData .ScoreLabel
{
	margin-bottom: -5px;
	color: rgba(245, 245, 245, 0.6);
}

.Score .ScoreData .ScoreValue
{
	letter-spacing: 0.5px;
	font-size: 36px;
	text-shadow: 0px 0px 12px rgba(255, 200, 0, 0.3);
}

.SetupScreen
{
	flow-children: down;
	horizontal-align: center;
	vertical-align: middle;
	width: 1000px;
	height: 600px;
	border: 2px solid rgb(255, 255, 255);
	border-brush: gradient( linear, 0% 0%, 0% 100%, from( gold1 ), color-stop( 0.5, gold2 ), to( gold3 ) );
	background-color: gradient( linear, 0% 0%, 0% 100%, from( charcoalLight ), to( charcoalDark ) );
	opacity: 0.0;
	transform: scale3d( 0.8, 0.8, 1 );
	transition-property: opacity, transform;
	transition-duration: 0.25s;
	transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);
	transition-delay: 0.3s;
}

.GameState_Setup .SetupScreen
{
	opacity: 1.0;
	transform: none;
	transition-duration: 0.15s;
	transition-timing-function: cubic-bezier(1, 0, 1, 1);
	transition-delay: 0s;
}

.SetupScreen .Header
{
	width: 100%;
	margin-top: 12px;
}

.SetupScreen .Header .EncounterGraphic
{
	horizontal-align: center;
	height: 100px;
	opacity-brush: gradient( linear, 0% 0%, 0% 30%, from( rgba(255, 255, 255, 0) ), to( white ) );
}

.SetupScreen .Header .Title
{
	font-size: 40px;
	font-family: titleFont;
	color: gradient( linear, 0% 00%, 0% 100%, from( #f9e7cd ), to( gold2 ) );
	font-weight: bold;
	text-transform: uppercase;
	horizontal-align: center;
	text-align: center;
	letter-spacing: 2px;
	text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
}

.SetupScreen .ColumnContainer
{
	flow-children: right;
	width: 100%;
	height: 400px;
	padding: 0px 24px;
}

.SetupScreen .ColumnContainer .Column1
{
	width: fill-parent-flow( 1.0 );
	height: 100%;
	flow-children: down;
	overflow: clip scroll;
	padding-bottom: 24px;
	opacity-mask: url("s2r://panorama/images/masks/event_schedule_mask_psd.vtex");
}

.SetupScreen .ColumnContainer .Column1 VerticalScrollBar
{
	margin: 4px 0px 24px;
}

.SetupScreen .ColumnContainer .Column2
{
	width: fill-parent-flow( 1.0 );
	height: 100%;
	flow-children: down;
}

.SetupScreen .ColumnContainer .Column2 #LeaderListFriends
{
	height: fill-parent-flow( 1.0 );
}

.SetupScreen .BottomButtons
{
	ui-scale: 90%;
	flow-children: right;
	horizontal-align: center;
	vertical-align: bottom;
}

.SetupScreen .BottomButtons .Loading
{
	flow-children: right;
	vertical-align: bottom;
	margin-bottom: 38px;
	margin-right: 8px;
	margin-left: 8px;
	visibility: collapse;
}

.IsLoading .SetupScreen .BottomButtons .Loading
{
	visibility: visible;
}

.SetupScreen .BottomButtons .Loading .Spinner
{
	vertical-align: middle;
	margin-right: 8px;
}

.SetupScreen .BottomButtons .Loading > Label
{
	vertical-align: middle;
	text-transform: uppercase;
	color: white;
	letter-spacing: 2px;
	font-size: 20px;
}

.SetupScreen .BottomButtons DOTACrownfallButton
{
	min-width: 260px;
}

.IsLoading .SetupScreen .BottomButtons .StartGameButton
{
	visibility: collapse;
}

.SetupScreen .BottomButtons .ExitButton
{
	visibility: collapse;
}

.PlayedOnce .SetupScreen .BottomButtons .ExitButton
{
	visibility: visible;
}

.SetupScreen .HowToPlaySection
{
	width: 100%;
	flow-children: down;
	padding-right: 12px;
}

.SetupScreen .HowToPlaySection .HowToPlayTitle
{
	text-transform: uppercase;
	font-size: 20px;
	letter-spacing: 2px;
	color: gold1;
	margin-bottom: 6px;
}

.SetupScreen .HowToPlaySection .HowToPlayDescription
{
	font-size: 16px;
	line-height: 1.2;
}

.SetupScreen .HowToPlaySection .HowToPlayDescription b
{
	font-weight: bold;
	font-size: 16px;
}

.SetupScreen .RewardsLabel
{
	text-transform: uppercase;
	font-size: 20px;
	letter-spacing: 2px;
	color: gold1;
	margin-top: 12px;
}

.SetupScreen .RewardsSection
{
	margin-top: 12px;
	flow-children: down;
	width: 100%;
	horizontal-align:left;
}

.SetupScreen .RewardsSection .RewardRow
{
	flow-children: right;
	width: 100%;
	margin-bottom: 2px;
}

.SetupScreen .RewardsSection .RewardRow.Unlocked
{
	brightness: 0.1;
}

.SetupScreen .RewardsSection .RewardRow .RewardScore
{
	width: 80px;
	vertical-align: middle;
	text-align: left;
	font-weight: bold;
}

.SetupScreen .RewardsSection .RewardRow .RewardValue
{
	flow-children: right;
	width: 100%;
	vertical-align: middle;
}

.SetupScreen .RewardsSection .RewardRow .RewardValue DOTACrownfallToken
{
	width: 38px;
	ui-scale: 64%;
}

.StartingScreen
{
	visibility: collapse;
	padding: 40px;
	horizontal-align: center;
	vertical-align: middle;
}

.StartingScreen Label
{
	horizontal-align: center;
	text-transform: uppercase;
	vertical-align: middle;
	text-align: center;
	font-size: 100px;
	font-family: titleFont;
	color: white;
	text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.8);
	font-weight: bold;
	letter-spacing: 4px;
}

.GameState_Starting .StartingScreen
{
	visibility: visible;
}

@keyframes 'StartingCountdownPulse'
{
	0%
	{
		pre-transform-scale2d: 1.5;
	}
	
	100%
	{
		pre-transform-scale2d: 1.0;
	}
	
}

.StartingCountdown .StartingScreen
{
	animation-name: StartingCountdownPulse;
	animation-duration: 0.3s;
}

.PauseScreen
{
	padding: 48px;
	horizontal-align: center;
	vertical-align: center;
	flow-children: down;
	opacity: 0.0;
	transform: scale3d( 1.3, 1.3, 1 );
	transition-property: opacity, transform;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);
}

.IsPaused .PauseScreen
{
	opacity: 1.0;
	transform: none;
	transition-duration: 0.15s;
	transition-timing-function: cubic-bezier(1, 0, 1, 1);
}

.PauseScreen .PauseText
{
	font-size: 40px;
	font-family: titleFont;
	color: gradient( linear, 0% 00%, 0% 100%, from( #f9e7cd ), to( gold2 ) );
	text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.8);
	font-weight: bold;
	text-transform: uppercase;
	horizontal-align: center;
	text-align: center;
	letter-spacing: 2px;
	margin-bottom: 24px;
}

.PauseScreen DOTACrownfallButton
{
	horizontal-align: center;
	ui-scale: 80%;
	min-width: 400px;
}

.FinishedScreen
{
	border: 2px solid rgb(255, 255, 255);
	border-brush: gradient( linear, 0% 0%, 0% 100%, from( gold1 ), color-stop( 0.5, gold2 ), to( gold3 ) );
	background-color: gradient( linear, 0% 0%, 0% 100%, from( charcoalLight ), to( charcoalDark ) );
	padding: 48px;
	horizontal-align: center;
	vertical-align: center;
	flow-children: down;
	min-width: 520px;
	visibility: collapse;
}

.GameState_Finished .FinishedScreen
{
	visibility: visible;
}

.FinishedScreen .Title
{
	font-size: 40px;
	font-family: titleFont;
	color: gradient( linear, 0% 00%, 0% 100%, from( #f9e7cd ), to( gold2 ) );
	text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.8);
	font-weight: bold;
	text-transform: uppercase;
	horizontal-align: center;
	text-align: center;
	letter-spacing: 2px;
}

.FinishedScreen .Message
{
	horizontal-align: center;
	text-align: center;
}

.FinishedScreen .FinalScore
{
	horizontal-align: center;
	text-align: center;
	font-size: 24px;
	color: white;
	margin-top: 20px;
}

.FinishedScreen .CheatWarning
{
	margin-top: 8px;
	font-size: 16px;
	horizontal-align: center;
	text-align: center;
	width: 400px;
	color: loserRed;
	visibility: collapse;
}

.CheatDetected .FinishedScreen .CheatWarning
{
	visibility: visible;
}

.FinishedScreen .PlayAgainButton
{
	margin-top: 24px;
	horizontal-align: center;
	min-width: 260px;
}

#GameBackground
{
	width: 100%;
	height: 100%;
	hue-rotation: 10deg;
}

#OpponentScene,#GameBackground
{
	width: 100%;
	height: 100%;
	horizontal-align: center;
	transition-property: blur;
	transition-duration: 0.4s;
	transition-delay: 0s;
	blur: gaussian( 12px );
}

.GameState_Active #OpponentScene,.GameState_Active #GameBackground
{
	blur: gaussian( 0px );
}

#OpponentScene.PlayerTookDamage,#GameBackground.PlayerTookDamage
{
	animation-name: ShakeScene;
	animation-duration: 0.1s;
	animation-iteration-count: 3;
}

@keyframes 'ShakeScene'
{
	0%
	{
		transform: translateX( 6px ) translateY( 0px );
	}
	
	50%
	{
		transform: translateX( -3px ) translateY( -3px );
	}
	
	100%
	{
		transform: translateX( 0px ) translateY( 2px );
	}
	
}

.OpponentHeader
{
	horizontal-align: center;
	flow-children: down;
	margin-top: 44px;
	width: 520px;
	transition-property: opacity, transform;
	transition-duration: 0.2s;
	transition-delay: 0s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);
	opacity: 0;
	transform: translateY( -24px );
}

.GameState_Active.HasOpponent.OpponentState_Active .OpponentHeader
{
	opacity: 1;
	transform: none;
}

.OpponentHeader .LevelContainer
{
	horizontal-align: center;
	flow-children: right;
}

.OpponentHeader .LevelContainer .Dash
{
	vertical-align: center;
	width: fill-parent-flow(1);
	height: 1px;
	opacity: 0.3;
}

.OpponentHeader .LevelContainer .Dash.Left
{
	background-color: gradient( linear, 100% 0%, 0% 0%, from( white ), to( rgba(255, 255, 255, 0) ) );
}

.OpponentHeader .LevelContainer .Dash.Right
{
	background-color: gradient( linear, 0% 0%, 100% 0%, from( white ), to( rgba(255, 255, 255, 0) ) );
}

.OpponentHeader .LevelContainer .OpponentLevel
{
	horizontal-align: center;
	text-align: center;
	color: rgba(255, 255, 255, 0.9);
	margin: 0px 12px;
}

.OpponentHeader .OpponentLabel
{
	horizontal-align: center;
	text-align: center;
	color: rgba(255, 255, 255, 0.9);
}

.OpponentHeader .OpponentName
{
	color: white;
	horizontal-align: center;
	text-align: center;
	margin-top: 6px;
	margin-bottom: 6px;
	text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4);
}

.OpponentHeader .OpponentFlavor
{
	color: #ccc;
	font-size: 16px;
	horizontal-align: center;
	text-align: center;
	margin-top: -6px;
	margin-bottom: 6px;
	text-shadow: 0px 4px 16px rgba(0, 0, 0, 0.4);
	visibility: collapse;
}

.HasOpponentFlavor .OpponentHeader .OpponentFlavor
{
	visibility: visible;
}

.OpponentHeader .DashDotDivider
{
	horizontal-align: center;
	flow-children: right;
	width: 100%;
}

.OpponentHeader .DashDotDivider .Dot
{
	width: 7px;
	height: width-percentage( 100% );
	background-color: white;
	vertical-align: center;
	margin: 4px 12px;
	transform: rotateZ( 45deg );
	box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);
	opacity: 0.6;
}

.OpponentHeader .DashDotDivider .Dash
{
	vertical-align: center;
	width: fill-parent-flow(1);
	height: 1px;
	opacity: 0.3;
}

.OpponentHeader .DashDotDivider .Dash.Left
{
	background-color: gradient( linear, 100% 0%, 0% 0%, from( white ), to( rgba(255, 255, 255, 0) ) );
}

.OpponentHeader .DashDotDivider .Dash.Right
{
	background-color: gradient( linear, 0% 0%, 100% 0%, from( white ), to( rgba(255, 255, 255, 0) ) );
}

.OpponentFooter
{
	width: 100%;
	vertical-align: bottom;
	flow-children: down;
	margin-bottom: 24px;
	transition-property: opacity, transform;
	transition-duration: 0.2s;
	transition-delay: 0s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);
	opacity: 0;
	transform: translateY( 24px );
}

.GameState_Active.HasOpponent.OpponentState_Active .OpponentFooter
{
	opacity: 1;
	transform: none;
}

.OpponentFooter .HealthContainer
{
	vertical-align: bottom;
	horizontal-align: center;
}

.OpponentFooter .HealthContainer #OpponentHealthProgressBar
{
	border-radius: 3px;
	height: 28px;
	border: 1px solid rgb(0, 0, 0);
	box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.02);
	width: 420px;
	background-color: rgba(0, 0, 0, 0.96);
}

.OpponentFooter .HealthContainer #OpponentHealthProgressBar .ProgressBarLeft
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #E84848 ), to( #BA1C1C ) );
}

.OpponentFooter .HealthContainer Label
{
	vertical-align: center;
	horizontal-align: center;
	text-align: center;
	color: white;
	text-shadow: 0px 2px 12px black;
	font-weight: bold;
	letter-spacing: 1px;
}

.OpponentFooter .ActionContainer
{
	flow-children: right;
	horizontal-align: center;
	vertical-align: bottom;
	margin-bottom: 8px;
	visibility: collapse;
}

.OpponentFooter .ActionContainer > Label
{
	vertical-align: middle;
	margin-right: 8px;
	text-transform: uppercase;
	color: #ccc;
	letter-spacing: 2px;
}

.OpponentFooter .ActionContainer #OpponentActionImage
{
	width: 64px;
	height: 64px;
	border: 2px solid transparent;
}

.OpponentFooter .ActionContainer #OpponentActionImage #OpponentActionCooldownOverlay
{
	width: 100%;
	height: 100%;
	background-color: #000d;
	visibility: collapse;
}

.OpponentFooter .ActionContainer #OpponentActionImage .ActionCooldownTime
{
	color: white;
	font-size: 28px;
	text-shadow: 0px 0px 6px 6 #000000;
	width: 100%;
	text-align: center;
	vertical-align: center;
	text-overflow: shrink;
	visibility: collapse;
}

.StageIntroContainer
{
	horizontal-align: center;
	vertical-align: middle;
	flow-children: down;
	background-color: gradient( linear, 0% 0%, 100% 0%, from( #32374400 ), color-stop( 0.2, #13161eeb ), color-stop( 0.5, #191e29 ), color-stop( 0.8, #13161eeb ), to( #32374400) );
	border-top: 1px solid rgba(255, 255, 255, 0.8);
	border-bottom: 1px solid rgba(255, 255, 255, 0.8);
	padding: 24px;
	border-brush: gradient( linear, 0% 0%, 100% 0%, from( #32374400 ), color-stop( 0.2, #ffddaa69 ), color-stop( 0.5, #ffdfb0 ), color-stop( 0.8, #ffddaa69 ), to( #32374400) );
	opacity: 0.0;
	transform: scale3d( 1.3, 1.3, 1.0 );
	transition-property: opacity, transform;
	transition-duration: 0.4s;
	transition-timing-function: cubic-bezier(0, 0.9, 0, 0.9);
}

.StageIntro .StageIntroContainer
{
	opacity: 1.0;
	transform: none;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(1, 0, 1, 1);
}

.StageIntroContainer .LevelName
{
	text-align: center;
	horizontal-align: center;
	color: #999;
	font-size: 24px;
	text-transform: uppercase;
	letter-spacing: 2px;
	text-shadow: 0px 4px 12px black;
}

.StageIntroContainer .OpponentName
{
	text-align: center;
	horizontal-align: center;
	font-size: 40px;
	text-transform: uppercase;
	letter-spacing: 2px;
	text-shadow: 0px 4px 16px black;
	font-family: titleFont;
	color: white;
	font-weight: bold;
}

.StageIntroContainer .BossBattle
{
	text-align: center;
	horizontal-align: center;
	color: gradient( linear, 0% 0%, 0% 100%, from( red ), to( orange ) );
	font-size: 40px;
	text-transform: uppercase;
	letter-spacing: 2px;
	text-shadow: 2px 2px 4px black;
	font-weight: bold;
	font-style: italic;
	visibility: collapse;
}

.BossLevel .StageIntroContainer .BossBattle
{
	visibility: visible;
}

.VersusLabel
{
	horizontal-align: center;
	text-align: center;
	font-size: 32px;
	text-transform: uppercase;
	margin: 16px 0px;
	font-family: titleFont;
	font-weight: bold;
}

.Player
{
	transition-property: opacity, transform;
	transition-duration: 0.2s;
	transition-delay: 0.5s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);
	opacity: 0;
	transform: translateY( 24px );
}

.GameState_Active .Player
{
	opacity: 1;
	transform: none;
}

.Player
{
	width: 100%;
	flow-children: down;
}

.Player #PlayerModifiers
{
	height: 46px;
}

.Player .HealthBarTitle
{
	horizontal-align: center;
}

.Player .PlayerHealthContainer
{
	horizontal-align: center;
	margin-top: 8px;
}

.Player .PlayerHealthContainer #PlayerHealthProgressBar
{
	border-radius: 3px;
	height: 28px;
	border: 1px solid rgb(0, 0, 0);
	box-shadow: 0px 0px 0px 1px rgba(255, 255, 255, 0.02);
	width: 420px;
	background-color: rgba(0, 0, 0, 0.96);
}

.Player .PlayerHealthContainer #PlayerHealthProgressBar .ProgressBarLeft
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5CA33C ), to( #3E5F23 ) );
}

.OpponentActionIsActive .Player .PlayerHealthContainer #PlayerHealthProgressBar .ProgressBarLeft
{
	animation-name: FlashHealthBar;
	animation-duration: 0.5s;
	animation-delay: 0.5s;
}

.Player .PlayerHealthContainer Label
{
	vertical-align: center;
	horizontal-align: center;
	text-align: center;
	color: white;
	text-shadow: 0px 2px 12px black;
	font-weight: bold;
	letter-spacing: 1px;
}

@keyframes 'FlashHealthBar'
{
	0%
	{
		brightness: 1;
	}
	
	10%
	{
		brightness: 10;
	}
	
	100%
	{
		brightness: 1;
	}
	
}

.CloseButton
{
	horizontal-align: right;
}

.ModifierList
{
	flow-children: right;
	horizontal-align: center;
}

.Modifier
{
	width: 46px;
	height: 46px;
	border-radius: 50%;
	margin: 0px 4px;
}

.Modifier #ModifierImage
{
	width: 100%;
	height: 100%;
}

.Modifier #ModifierBorder
{
	width: 100%;
	height: 100%;
	background-image: url("s2r://panorama/images/hud/reborn/buff_outline_psd.vtex");
	background-size: 105% 105%;
	background-position: center;
	background-repeat: no-repeat;
	wash-color: #e43c10;
}

.Modifier .ModifierNumber
{
	width: 100%;
	max-height: 24px;
	padding: 0px 4px 0px 4px;
	text-shadow: 0px 0px 4px 6 #000000;
	color: white;
	margin: 0px;
	horizontal-align: center;
	vertical-align: center;
	font-family: monospaceNumbersFont;
	font-size: 20px;
	text-align: center;
	text-overflow: shrink;
	visibility: collapse;
}

.Modifier.ShowNumber .ModifierNumber
{
	visibility: visible;
}

.Modifier.IsBuff #ModifierBorder
{
	wash-color: #8bdd4f;
}

@define scoreEventDuration: 0.7s;
@keyframes 'ScoreEventAnimation'
{
	0%
	{
		transform: scale3d( 1.2, 1.2, 1.0 );
	}
	
	10%
	{
		transform: scale3d( 1.5, 1.5, 1.0 );
	}
	
	100%
	{
		transform: translateY( -30px);
	}
	
}

@define defaultDamageEventDuration: 0.7s;
@keyframes 'DefaultDamageEventAnimation'
{
	0%
	{
		transform: scale3d( 1.2, 1.2, 1.0 );
	}
	
	10%
	{
		transform: scale3d( 1.5, 1.5, 1.0 );
	}
	
	100%
	{
		transform: translateY( -30px);
	}
	
}

@define critDamageEventDuration: 1.5s;
@keyframes 'CritDamageEventAnimation'
{
	0%
	{
		transform: scale3d( 1.2, 1.2, 1.0 );
	}
	
	10%
	{
		transform: scale3d( 2.0, 2.0, 1.0 );
	}
	
	100%
	{
		transform: translateY( -60px);
	}
	
}

@define magicDamageEventDuration: 0.7s;
@keyframes 'MagicDamageEventAnimation'
{
	0%
	{
		transform: scale3d( 1.2, 1.2, 1.0 );
	}
	
	10%
	{
		transform: scale3d( 1.5, 1.5, 1.0 );
	}
	
	100%
	{
		transform: translateY( -30px);
	}
	
}

#EventsOverlay
{
	width: 100%;
	height: 100%;
	overflow: clip;
}

#EventsOverlay .ScoreEvent
{
	width: 300px;
	height: 200px;
	overflow: noclip;
	transform: translate3d( -150px, -100px, 0px );
}

#EventsOverlay .ScoreEvent .Contents
{
	width: 100%;
	vertical-align: middle;
	flow-children: down;
	animation-name: ScoreEventAnimation;
	animation-duration: scoreEventDuration;
	animation-fill-mode: forwards;
}

#EventsOverlay .ScoreEvent .Contents .EventTitle
{
	horizontal-align: center;
	text-align: center;
	text-transform: uppercase;
	font-size: 24px;
	color: white;
	text-shadow: 2px 2px 4px black;
}

#EventsOverlay .ScoreEvent .Contents .ScoreAmount
{
	horizontal-align: center;
	text-align: center;
	font-size: 32px;
	color: yellow;
	text-shadow: 2px 2px 4px black;
}

#EventsOverlay .DamageEvent
{
	width: 300px;
	height: 200px;
	overflow: noclip;
	transform: translate3d( -150px, -100px, 0px );
}

#EventsOverlay .DamageEvent.DefaultDamageEvent .DamageAmount
{
	horizontal-align: center;
	vertical-align: middle;
	text-align: center;
	color: white;
	font-size: 36px;
	font-weight: bold;
	text-shadow: 2px 2px 4px black;
	animation-name: DefaultDamageEventAnimation;
	animation-duration: defaultDamageEventDuration;
	animation-fill-mode: forwards;
}

#EventsOverlay .DamageEvent.CritDamageEvent .Contents
{
	horizontal-align: center;
	vertical-align: middle;
	flow-children: right;
	animation-name: CritDamageEventAnimation;
	animation-duration: critDamageEventDuration;
	animation-fill-mode: forwards;
}

#EventsOverlay .DamageEvent.CritDamageEvent .Icon
{
	width: 32px;
	height: 32px;
	margin-right: 4px;
	vertical-align: middle;
	wash-color: rgb( 255, 0, 0 );
	background-image: url("s2r://panorama/images/control_icons/crit_damage_png.vtex");
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
}

#EventsOverlay .DamageEvent.CritDamageEvent .DamageAmount
{
	color: rgb( 255, 0, 0 );
	font-size: 48px;
	font-weight: bold;
	text-shadow: 2px 2px 4px black;
}

#EventsOverlay .DamageEvent.MagicDamageEvent .Contents
{
	horizontal-align: center;
	vertical-align: middle;
	flow-children: right;
	animation-name: MagicDamageEventAnimation;
	animation-duration: magicDamageEventDuration;
	animation-fill-mode: forwards;
}

#EventsOverlay .DamageEvent.MagicDamageEvent .Icon
{
	width: 32px;
	height: 32px;
	margin-right: 4px;
	vertical-align: middle;
	wash-color: rgb( 163, 38, 228 );
	background-image: url("s2r://panorama/images/control_icons/magic_damage_png.vtex");
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
}

#EventsOverlay .DamageEvent.MagicDamageEvent .DamageAmount
{
	color: rgb( 163, 38, 228 );
	font-size: 48px;
	font-weight: bold;
	text-shadow: 2px 2px 4px black;
}

#OpponentActionQueue
{
	margin-top: 290px;
	flow-children: down;
	padding: 16px;
	visibility: collapse;
}

.HasOpponent #OpponentActionQueue
{
	visibility: visible;
}

@keyframes 'InterruptedAction'
{
	0%
	{
		transform: translateX( 6px ) translateY( 0px );
	}
	
	50%
	{
		transform: translateX( -3px ) translateY( -3px );
	}
	
	100%
	{
		transform: translateX( 0px ) translateY( 2px );
	}
	
}

@define opponentActionDestroyTime: 0.3s;
.OpponentAction
{
	width: 64px;
	height: 64px;
	margin-bottom: 12px;
	border: 1px solid black;
	box-shadow: 0px 4px 24px -4px rgba(0, 0, 0, 0.6);
	opacity: 0.0;
	transition-property: border, opacity, width, height, position, transform;
	transition-duration: 0.1s, 0.5s, 0.3s;
	transition-delay: 0s, 0.5s, 0.0s;
}

.OpponentAction.IsCurrentAction
{
	width: 92px;
	height: 92px;
}

.OpponentAction.IsCurrentAction:not(.OnCooldown)
{
	border: 3px solid white;
	border-brush: gradient( linear, 0% 0%, 0% 100%, from( winnerGreen ), to( winnerGreenLow ) );
	box-shadow: 0px 0px 24px winnerGreen&22;
	brightness: 2;
}

.OpponentAction.Showing
{
	opacity: 1.0;
	transition-delay: 0.0s;
}

.OpponentAction.Destroying
{
	opacity: 0.0;
	ignore-parent-flow: true;
	transform: scale3d( 0.8, 0.8, 0 );
}

.OpponentAction #ActionImage
{
	width: 100%;
	height: 100%;
}

.OpponentAction #CooldownOverlay
{
	width: 100%;
	height: 100%;
	background-color: #000d;
	visibility: collapse;
}

.OpponentAction .CooldownTime
{
	color: white;
	font-size: 28px;
	text-shadow: 0px 2px 12px 6 #000000;
	width: 100%;
	text-align: center;
	vertical-align: center;
	text-overflow: shrink;
	visibility: collapse;
}

.OpponentAction.OnCooldown.IsCurrentAction #CooldownOverlay
{
	visibility: visible;
}

.OpponentAction.OnCooldown.IsCurrentAction .CooldownTime
{
	visibility: visible;
}

.OpponentAction .InterruptedOverlay
{
	color: white;
	font-size: 28px;
	text-shadow: 0px 0px 6px 6 #000000;
	width: 100%;
	text-align: center;
	vertical-align: center;
	text-overflow: shrink;
	visibility: collapse;
}

.OpponentAction.IsInterrupted
{
	animation-name: InterruptedAction;
	animation-duration: 0.2s;
}

.OpponentAction.IsInterrupted #ActionImage
{
	saturation: 0.2;
	brightness: 0.2;
}

.OpponentAction.IsInterrupted .InterruptedOverlay
{
	visibility: visible;
}

.OpponentAction.IsInterrupted.IsCurrentAction .CooldownTime
{
	visibility: collapse;
}

.PauseHint
{
	horizontal-align: right;
	vertical-align: bottom;
	flow-children: right;
	margin-top: 12px;
	transition-property: transform, opacity, brightness;
	transition-duration: 0.3s;
	transition-timing-function: cubic-bezier(0, 1, 0, 1);
	opacity: 0;
	transform: translateY( 24px );
}

.GameState_Active .PauseHint
{
	opacity: 1;
	transform: none;
	transition-timing-function: cubic-bezier(1, 0, 1, 1);
}

.PauseHint:hover
{
	brightness: 2.0;
}

.PauseHint:active
{
	brightness: 1.5;
}

.PauseHint .PauseLabelContainer
{
	vertical-align: center;
	margin-right: 8px;
	margin-top: -2px;
}

.PauseHint .PauseLabel,.PauseHint .UnPauseLabel
{
	horizontal-align: right;
	opacity: 0;
	transition-property: transform, opacity;
	transition-duration: 0.2s;
	transition-timing-function: ease-out;
}

.PauseHint .PauseLabel
{
	transition-duration: 0.05s;
	opacity: 1;
	transform: none;
	transition-delay: 0s;
}

.IsPaused .PauseHint .PauseLabel
{
	transition-duration: 0.2s;
	opacity: 0;
	transform: translateY( -8px );
	transition-delay: 0.05s;
}

.PauseHint .UnPauseLabel
{
	transition-duration: 0.2s;
	opacity: 0;
	transform: translateY( 8px );
	transition-delay: 0.05s;
}

.IsPaused .PauseHint .UnPauseLabel
{
	transition-duration: 0.05s;
	opacity: 1;
	transform: none;
	transition-delay: 0s;
}

